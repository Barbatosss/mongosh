import com.mongodb.MongoClient;
import com.mongodb.MongoClientURI;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.model.Aggregates;
import com.mongodb.client.model.Filters;
import com.mongodb.client.model.Updates;
import org.bson.Document;
import org.bson.conversions.Bson;

import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Arrays;
import java.util.Date;
import java.util.concurrent.TimeUnit;

public class UserService {

    private final MongoDatabase db;

    public UserService(MongoDatabase database) {
        this.db = database;
    }

    public void createUser(String fullName, String email, String password, String dateOfBirth, String gender, String location, String relationshipStatus, String bio) {
        // Find the highest UserID
        MongoCollection<Document> userCollection = db.getCollection("user");
        Document highestUser = userCollection.find().sort(new Document("UserID", -1)).first();

        // Increment the UserID
        int newUserID = highestUser != null ? highestUser.getInteger("UserID") + 1 : 1;

        // Parse the dateOfBirth string to Date
        Date dob = Date.from(LocalDate.parse(dateOfBirth).atStartOfDay(ZoneId.systemDefault()).toInstant());

        // Create the user object
        Document user = new Document("UserID", newUserID)
                .append("FullName", fullName)
                .append("Email", email)
                .append("Password", password)
                .append("DateOfBirth", dob)
                .append("Gender", gender)
                .append("Location", location)
                .append("RelationshipStatus", relationshipStatus)
                .append("Bio", bio)
                .append("AccountCreationTimestamp", new Date());

        try {
            // Insert the user into the user collection
            userCollection.insertOne(user);

            // Calculate age and update the user document
            Bson addFields = Aggregates.addFields(new Document("Age", new Document("$floor", new Document("$divide", Arrays.asList(
                    new Document("$subtract", Arrays.asList(new Date(), "$DateOfBirth")),
                    1000 * 60 * 60 * 24 * 365.25
            )))));

            for (Document doc : userCollection.aggregate(Arrays.asList(addFields))) {
                userCollection.updateOne(
                        Filters.eq("_id", doc.getObjectId("_id")),
                        Updates.set("Age", doc.getInteger("Age"))
                );
            }

            System.out.println("User created successfully with UserID: " + newUserID);
        } catch (Exception e) {
            System.out.println("Error creating user: " + e.getMessage());
        }
    }

    public static void main(String[] args) {
        // Create a MongoDB client and database instance
        MongoClient mongoClient = new MongoClient(new MongoClientURI("mongodb://localhost:27017"));
        MongoDatabase database = mongoClient.getDatabase("yourDatabaseName");

        // Create an instance of UserService
        UserService userService = new UserService(database);

        // Sample usage
        userService.createUser(
                "Sabine Callas",
                "viper@example.com",
                "toxic123",
                "1986-08-03",
                "Female",
                "United States",
                "Single",
                "A scientist focused on toxicology"
        );
    }
}
